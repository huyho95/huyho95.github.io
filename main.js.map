{"version":3,"sources":["./src/app/contacts/contacts.module.ts","./src/app/user-form/user-form.component.ts","./src/app/user-form/user-form.component.html","./src/app/learn-pipe/learn-pipe.component.ts","./src/app/learn-pipe/learn-pipe.component.html","./src/app/weather/weather.component.ts","./src/app/weather/weather.component.html","./src/app/card.component.ts","./src/environments/environment.ts","./src/app/child.component.ts","./src/app/sign-in.component.ts","./src/app/list-person/list-person.component.ts","./src/app/list-person/list-person.component.html","./src/app/contact-detail/contact-detail.component.ts","./src/app/weather/weather.service.ts","./src/app/word/word.component.ts","./src/app/word/word.component.html","./src/app/sign-up.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/book/book.component.ts","./src/app/book/book.component.html","./src/app/sign-in.service.ts","./src/app/words/words.component.ts","./src/app/words/words.component.html","./src/app/app.module.ts","./src/app/ip.service.ts","./src/app/parent.component.ts","./src/app/contacts/contacts.component.ts","./src/app/contacts/contacts.component.html","./src/app/person/person.component.ts","./src/app/person/person.component.html","./src/app/round.pipe.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/struct/struct.component.ts","./src/app/struct/struct.component.html","./src/app/app-routing.module.ts","./src/app/ip.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ContactsComponent } from './contacts.component';\r\n\r\nconst routesConfig: Routes = [\r\n    { path: 'contacts', component: ContactsComponent}\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(routesConfig)\r\n    ],\r\n    declarations: [ContactsComponent]\r\n})  \r\n\r\nexport class ContactsModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent implements OnInit {\n  name = '';\n  evenStyle = { color: 'red', fontSize: '30px' };\n  oddStyle = { color: 'black', fontSize: '20px' };\n  isHighlight = true;\n  currentCLass = { circle : !this.isHighlight, square : this.isHighlight };\n  constructor() { }\n// this: đại diện cho các component được tạo ra\n  ngOnInit(): void {\n  }\n  // showEvent(iven) {\n  //   this.name = iven.target.value;\n  // }\n\n}\n","<!-- <input placeholder=\"Enter username\" (keyup)=\"showEvent($event);\"> -->\n<input placeholder=\"Enter username\" [(ngModel)]=\"name\">\n<!-- <input placeholder=\"Enter username\" [(ngModel)]=\"name\" #txtUsername> -->\n<!-- <code>{{ txtUsername.value | json }}</code> -->\n<h3 [style.color] = \"name.length % 2 === 0 ? 'red' : 'black'\">\n    Your name is : {{ name }}\n</h3>\n<!-- <h3 [style.color] = \"isHighlight ? 'red' : 'black'\">\n    Your name is : {{ name }}\n</h3> -->\n<div [class]=\"isHighlight ? 'circle' : 'square'\"></div>\n<div [class.circle]=\"!isHighlight\" [class.square]=\"isHighlight\"></div>\n<!-- <h3 [style.color] = \"isHighlight ? 'red' : 'black'\"\n    [style.fontSize] = \"isHighlight ? '40px' : '20px'\"    \n>\n    Your name is : {{ name }}\n</h3> -->\n<h3 [ngStyle] = \"name.length % 2 === 0 ? evenStyle : oddStyle\">\n    Your name is : {{ name }}\n</h3>\n<div [class] = \"isHighlight ? 'circle' : 'square'\"></div>\n<div [ngClass] = \"currentCLass\" ></div>","import { Component, OnInit } from '@angular/core';\nimport { promise } from 'protractor';\n\n@Component({\n  selector: 'app-learn-pipe',\n  templateUrl: './learn-pipe.component.html',\n  styleUrls: ['./learn-pipe.component.css']\n})\nexport class LearnPipeComponent implements OnInit {\n  birthday = new Date(2011, 12, 5);\n  // new : tạo mới\n  person = { name : 'huy', age : '16' };\n  address = Promise.resolve(\"315 Hoang Dieu\");\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>{{ birthday | date : 'shortTime'}}</p>\n<p>{{ person | json | uppercase }}</p>\n<p>{{ address | async }}</p>\n<p>{{ 1.9  | roundNum: true : 10 }}</p>\n<p>{{ 3.5  | roundNum: false : 2 }}</p>\n","import { Component, OnInit } from '@angular/core';\nimport { WeatherService } from './weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css'],\n  providers: [WeatherService]\n})\nexport class WeatherComponent implements OnInit {\n\n  txtCityName = '';\n  cityName = '';\n  temp = null;\n  isLoading = false;\n\n  constructor(private weatherService : WeatherService) { }\n\n  // ngOnInit(): void {\n  //   this.weatherService.getTemp('Tokyo')\n  //   .then(temp => console.log(temp))\n  //   .catch(err => console.log(err))\n  // }\n\n  ngOnInit() {}\n\n  getWeather() {\n    this.isLoading = true;\n    this.weatherService.getTemp(this.txtCityName)\n    .then(temp => { // temp : sau khi lấy được nhiệt độ temp rồi thì ...\n      this.cityName = this.txtCityName;\n      this.temp = temp; // this.temp : temp mình tạo ở trên\n      this.isLoading = false;\n      this.txtCityName = '';\n    })\n    .catch(err => {\n      alert('Cannot find your city !')\n      this.isLoading = false;\n      this.cityName = '';\n      this.txtCityName = '';\n    })\n  }\n  \n  getMessage() {\n    if(this.isLoading) {\n      return \"loading ...\";\n    }\n    return this.cityName === '' ? 'Enter your city name' : (this.cityName + ' is now ' + this.temp)\n  }\n}\n","<h3>{{ getMessage() }}</h3>\n<input placeholder=\"Enter your city name\" [(ngModel)]=\"txtCityName\">\n<br>\n<button (click)=\"getWeather();\">Get weather</button>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-card',\r\n    template: `\r\n        <div class=\"card\">\r\n            <div class=\"header\">\r\n                <ng-content select=\".card-header\"></ng-content>\r\n            </div>\r\n            <div class=\"body\">\r\n                <ng-content select=\".card-body\"></ng-content>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .card {\r\n            padding: 5px;\r\n            margin: 5px;\r\n            background: #fff;\r\n            border-radius: 2px;\r\n            display: inline-block;\r\n            width: 300px;\r\n            box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);\r\n        }\r\n    `]\r\n})\r\n\r\nexport class CardComponent {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n// @Component ({\r\n//     selector: 'app-child',\r\n//     template: `\r\n//     <button (click)=\"addForParent();\">Add</button>\r\n//     <br>\r\n//     <button (click)=\"subForParent();\">Sub</button>\r\n//     `\r\n// })\r\n\r\n// export class ChildComponent {\r\n//     @Output() myClick = new EventEmitter<boolean>();\r\n     \r\n//     addForParent() {\r\n//         this.myClick.emit(true);\r\n//         // emit: thực thi sự kiện\r\n//     }\r\n\r\n//     subForParent() {\r\n//         this.myClick.emit(false);\r\n//     }\r\n// }\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n@Component ({\r\n    selector: 'app-child',\r\n    template: `\r\n        <h3>{{ value }}</h3>\r\n    `\r\n})\r\n\r\nexport class ChildComponent {\r\n   value = 0;\r\n}","import { Component, Input } from '@angular/core';\r\nimport { SignInService } from './sign-in.service';\r\n// @Component({\r\n//     selector: 'app-sign-in',\r\n//     template: `\r\n//     <form (ngSubmit)=\"onSubmit(formSignIn);\" #formSignIn=\"ngForm\">\r\n//         <input placeholder=\"Email\" ngModel name=\"email\" required>\r\n//         <br>\r\n//         <p *ngIf = \"formSignIn.controls.email?.errors?.required\">\r\n//             Email is required\r\n//         </p>\r\n//         <input type=\"password\" placeholder=\"Password\" ngModel name=\"password\">\r\n//         <br>\r\n//         <button>Submit</button>\r\n//     </form>\r\n//     `\r\n//     ? : khác null hoặc khác required\r\n//     <button [disabled]=\"formSignIn.invalid\">Submit</button> : người dùng chưa nhập email thì sẽ ẩn nút button\r\n// })\r\n\r\n\r\n\r\n// @Component({\r\n//     selector: 'app-sign-in',\r\n//     template: `\r\n//     <form (ngSubmit)=\"onSubmit(formSignIn);\" #formSignIn=\"ngForm\">\r\n//         <input placeholder=\"Email\" ngModel name=\"email\">\r\n//         <br>\r\n//         <input type=\"password\" placeholder=\"Password\" ngModel name=\"password\">\r\n//         <br>\r\n//         <button>Submit</button>\r\n//     </form>\r\n//     `\r\n// })\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-sign-in',\r\n    template: `\r\n    <form (ngSubmit)=\"onSubmit(formSignIn);\" #formSignIn=\"ngForm\">\r\n        <input \r\n            placeholder=\"Email\" \r\n            ngModel \r\n            #txtEmail=\"ngModel\"\r\n            name=\"email\"\r\n            required\r\n            email\r\n        >\r\n        <p style=\"margin-bottom: 0px\" *ngIf = \"txtEmail.touched && txtEmail.errors?.required\">\r\n            Email is required\r\n        </p>\r\n        <p style=\"margin-bottom: 0px\" *ngIf = \"txtEmail.touched && txtEmail.errors?.email\">\r\n            Email is not valid\r\n        </p>\r\n        <br>\r\n        <input  type=\"password\" \r\n                placeholder=\"Password\" \r\n                ngModel \r\n                #txtPassword =\"ngModel\"\r\n                name=\"password\"\r\n                minlength=\"6\"\r\n                pattern=\"[a-z]*\"\r\n\r\n        >\r\n        <br>\r\n        <div ngModelGroup=\"subjects\">\r\n            <label><input type=\"checkbox\" [ngModel]=\"false\" name=\"NodeJs\" > NodeJs</label>\r\n            <label><input type=\"checkbox\" [ngModel]=\"false\" name=\"Angular\" > Angular</label>\r\n            <label><input type=\"checkbox\" [ngModel]=\"false\" name=\"ReactJs\" > ReactJs</label>\r\n        </div>\r\n        <br>\r\n        <button [disabled]=\"formSignIn.invalid\">Submit</button>\r\n    </form>\r\n    <br>\r\n    \r\n    <p>{{ txtEmail.errors | json }}</p>\r\n    <p>{{ txtPassword.errors | json }}</p>\r\n    <p>{{ formSignIn.value | json }}</p>\r\n\r\n    `,\r\n    providers: [SignInService]\r\n    \r\n    //<button (click)=\"postToExpress();\">Post</button>\r\n    // txtEmail : thay thế cho formSignIn.controls.email? trong console của web\r\n    //label, bình thường chỉ để ngModel, mún ngay khi bật lên có giá trị bằng false thì [ngModel]=\"false\"\r\n})\r\n// export class SignInComponent {\r\n//     constructor(private http: HttpClient) {}\r\n//     onSubmit(formSignIn) {\r\n//         // console.log(formSignIn);\r\n//         // throw new Error('Form is invalid');\r\n\r\n//         const url = 'http://localhost:3000/signin';\r\n//         const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n//         // Content-Type vaf application/json trong postman phần headers\r\n//         const body = JSON.stringify(formSignIn.value);\r\n//         //stringify: đổi javacript object thành json\r\n//         this.http.post(url, body, { headers, responseType: 'json'})\r\n//         // vì res.send(req.body) là javascript object nên responseType là json\r\n//         .toPromise()\r\n//         .then(resJSON =>  console.log(resJSON));\r\n\r\n//     }\r\n\r\n//     // postToExpress() {\r\n//     //     const url = 'http://localhost:3000/signin';\r\n//     //     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n//     //     // Content-Type vaf application/json trong postman phần headers\r\n//     //     const body = JSON.stringify({ name: 'Khoa Pham' });\r\n//     //     //stringify: đổi javacript object thành json\r\n//     //     this.http.post(url, body, { headers, responseType: 'text'})\r\n//     //     .toPromise()\r\n//     //     // res.send(req.body.name) : json đang gửi dưới dạng text, thuộc tính name dạng string nên res.text thay vì res.json\r\n//     //     .then(resText =>  console.log(resText));\r\n//     //     // sau khi thực hiện phương thức toPromise() thì được một biến ta tự đặt tên cho nó là resText\r\n//     // }\r\n// }\r\n\r\nexport class SignInComponent {\r\n    constructor(private signInService: SignInService) {}\r\n        onSubmit(formSignIn) {\r\n            this.signInService.sendPost(formSignIn.value)\r\n            .then(result => console.log(result))\r\n            .catch(err => console.log(err));\r\n        }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-list-person',\n  templateUrl: './list-person.component.html',\n  styleUrls: ['./list-person.component.css']\n})\nexport class ListPersonComponent implements OnInit {\n\n  arrPeople = [\n    { name : 'Huy', age : '25' },\n    { name : 'Huye', age : '26' },\n    { name : 'Huyen', age : '27' }   \n  ];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  removePersonByName(name: string) {\n    const index = this.arrPeople.findIndex(e => e.name === name);\n    this.arrPeople.splice(index,1);\n  }\n}\n","<ng-container *ngFor = \"let person of arrPeople\">\n    <app-person \n    [name]=\"person.name\" \n    [age]=\"person.age\"\n    (removePerson) = \"removePersonByName($event);\"\n    ></app-person>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\n@Component({\n  selector: 'app-contact-detail',\n  template: '<p>Ten:{{ name }}</p><p>SDT:{{ phoneNumber }}</p>',\n  styleUrls: ['./contact-detail.component.css']\n})\nexport class ContactDetailComponent implements OnInit {\n  name = '';\n  phoneNumber = '';\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params: ParamMap) => {\n      const id = params.get('id');\n      // params.get('id'): lấy id vì trong app-routing.module.ts gọi tham số id \n       this.name = params.get('name');\n       this.phoneNumber = params.get('phoneNumber');\n\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class WeatherService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getTemp(nameOfCity: string) {\r\n        const url = 'https://api.openweathermap.org/data/2.5/weather?appid=9918e7bc5c17feb84e25068d319edfa3&units=metric&q=' + nameOfCity;\r\n        return this.http.get(url)\r\n        .toPromise()\r\n        .then((res:any) => res.main.temp)\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './word.component.html',\r\n    selector: 'app-word',\r\n    styleUrls: ['./word.component.css']\r\n})\r\n\r\nexport class WordComponent {    \r\n    en = \"Hello\";\r\n    vn = \"Xin Chao\";\r\n    imageURL = \"https://angular.io/assets/images/logos/angular/logo-nav@2x.png\";\r\n    forgot = true;\r\n\r\n    toggleForgot() {\r\n        this.forgot = !this.forgot;\r\n    }\r\n} ","<h3 [hidden] = \"forgot\">{{ en }}</h3>\r\n<p>{{ vn }}</p>\r\n<img [src]=\" imageURL \" alt=\"\">\r\n<!-- <button (click) =\"forgot = !forgot\">Toggle forgot</button> -->\r\n<button (click) =\"toggleForgot()\">Toggle forgot</button> ","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'app-sign-up',\r\n    template:`\r\n        <form (ngSubmit)=\"onSubmit();\" [formGroup]=\"formSignUp\">    \r\n            <input placeholder=\"Email\" formControlName=\"email\">\r\n            <p *ngIf=\"formSignUp.get('email').invalid && formSignUp.get('email').touched\">Email is required</p>\r\n            <br>\r\n            <input type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n            <br>\r\n            <div formGroupName = \"subject\">\r\n                <label><input type=\"checkbox\"  name=\"NodeJs\" formControlName=\"nodeJS\" > NodeJs</label>\r\n                <label><input type=\"checkbox\"  name=\"Angular\" formControlName=\"angular\" > Angular</label>\r\n                <label><input type=\"checkbox\"  name=\"ReactJs\" formControlName=\"reactJS\" > ReactJs</label>\r\n            </div>\r\n            <br>\r\n            <button [disabled]=\"formSignUp.invalid\">Submit</button>\r\n            <br>\r\n            <code>{{ formSignUp.controls.email.errors | json }}</code>\r\n        </form>\r\n    `\r\n    // [FormGroup]=\"formSignUp\" : có dấu ngoặc vuông vì đang binding property\r\n    // FormControlName : không thể viết formControl=\"email\" vì không có biến this.email\r\n    //\"password\",\"nodeJS\",.. là biến trong constructor\r\n    //formSignUp.controls.email.invalid có thể thay bằng formSignUp.get('email').invalid\r\n})\r\n\r\n// export class SignUpComponent {\r\n//     formSignUp: FormGroup;\r\n\r\n//     constructor() {\r\n//         this.formSignUp = new FormGroup({\r\n//             email: new FormControl('a@gmai.com'),\r\n//             password: new FormControl(),\r\n\r\n//             subject: new FormGroup({\r\n//                 nodeJS: new FormControl(false),\r\n//                 angular: new FormControl(true),\r\n//                 reactJS: new FormControl(false)\r\n//             })\r\n//         });\r\n//         // trong javascript: không có lệnh đóng mở ngoặc () như dòng trên vẫn chạy bình thường\r\n//     }\r\n\r\n//     onSubmit() {\r\n//         console.log(this.formSignUp.value);\r\n//     }\r\n// }\r\n\r\nexport class SignUpComponent implements OnInit {\r\n\r\n    formSignUp: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder) {}\r\n\r\n    ngOnInit(): void {\r\n       this.formSignUp = this.fb.group({\r\n            // email: ['', Validators.required] , validators này thực chất là một hàm, mình có thể tự tạo một hàm cho nó. Ví dụ như hàm gmailValidator bên dưới\r\n            email: ['', [Validators.email, this.gmailValidator]],\r\n            password:'',\r\n\r\n            subject: this.fb.group({\r\n                nodeJS: false,\r\n                angular: true,\r\n                reactJS: false\r\n            })\r\n        });\r\n    }\r\n\r\n    onSubmit() {\r\n        console.log(this.formSignUp.value);\r\n    }\r\n\r\n    gmailValidator(formControl: FormControl) {\r\n        if (formControl.value.includes('@gmail.com')) {\r\n            // includes: kiểm tra xem một chuỗi có giống với chuỗi kia hay không ?\r\n            return null;\r\n        }\r\n        return { gmail  : false }; // return lại object\r\n    }   \r\n    \r\n}\r\n\r\n//import FormBuilder, thực hiện OnInit, thay đổi cấu trúc còn nội dung thì hoàn toàn giống nhau","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Hello world';\n}\n","<!-- <app-word></app-word>\r\n<app-book></app-book> -->\r\n<!-- <app-user-form></app-user-form> -->\r\n<!-- <app-struct></app-struct> -->\r\n<!-- <app-words></app-words> -->\r\n<!-- <app-person name=\"Huy\" age=\"25\"></app-person>\r\n<app-person name=\"Hu\" age=\"23\"></app-person> -->\r\n<!-- <app-list-person></app-list-person> -->\r\n<!-- <app-parent></app-parent> -->\r\n<!-- <app-list-person></app-list-person> -->\r\n<!-- <app-card>\r\n    <h3 class=\"card-header\">Khoa pham training</h3>\r\n    <app-child class=\"card-body\">Khoa pham training</app-child>\r\n</app-card> -->\r\n<!-- <app-learn-pipe></app-learn-pipe> -->\r\n<!-- <app-ip></app-ip> -->\r\n<!-- <app-weather></app-weather> -->\r\n<!-- <app-sign-in></app-sign-in> -->\r\n<!-- <app-sign-up></app-sign-up> -->\r\n<!-- <a href=\"/contacts\">Contacts</a> -->\r\n<!-- <a href=\"/detail\">Detail</a> -->\r\n<a routerLink=\"/contacts\">Contacts</a> \r\n<a routerLink=\"/detail\">Detail</a>\r\n<!-- routerLink: để cho trang web tự chuyển qua mà không cần load lại  -->\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>book works!</p>\n","\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\n\r\nexport class SignInService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    sendPost(value) {\r\n        const url = 'http://localhost:3000/signin';\r\n        const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n        // Content-Type vaf application/json trong postman phần headers\r\n        const body = JSON.stringify(value);\r\n        //stringify: đổi javacript object thành json\r\n        return this.http.post(url, body, { headers, responseType: 'json'})\r\n        .toPromise()\r\n        // .then((res:any) => res.json());\r\n        //không cần .then((res:any) => res.json()); vì đã có responseType: 'json'\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport { worker } from 'cluster';\n\n@Component({\n  selector: 'app-words',\n  templateUrl: './words.component.html',\n  styleUrls: ['./words.component.css']\n})\nexport class WordsComponent implements OnInit {\n  filterStatus = 'XEM_TAT_CA';\n  newEn = '';\n  newVn = '';\n  isShowForm = false;\n  arrWords = [\n    { id: 1, en: 'action', vn: 'hành động', memorized: true },\n    { id: 2, en: 'actor', vn: 'diễn viên', memorized: false },\n    { id: 3, en: 'activity', vn: 'hoạt động', memorized: true },\n    { id: 4, en: 'active', vn: 'chủ động', memorized: true },\n    { id: 5, en: 'bath', vn: 'tắm', memorized: false },\n    { id: 6, en: 'bedroom', vn: 'phòng ngủ', memorized: true }\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addWord() {\n    this.arrWords.unshift({ //unshift : thêm vào đầu, push: thêm vào sau\n      id : this.arrWords.length + 1,\n      en : this.newEn,\n      vn : this.newVn,\n      memorized : false\n    })\n    this.newEn = '';\n    this.newVn = '';\n    this.isShowForm = false;\n  }\n\n  removeWord(id: number){\n    const index = this.arrWords.findIndex(word => word.id === id);\n    // findIndex : tìm ra phần tử có id trong mảng có id = với id truyền vào\n    this.arrWords.splice(index,1);\n\n  }\n\n  getShowStatus(memorized: boolean) {\n    const dkXemTatCa = this.filterStatus === 'XEM_TAT_CA';\n    const dkXemDaNho = this.filterStatus === 'XEM_DA_NHO' && memorized;\n    const dkXemChuaNho = this.filterStatus === 'XEM_CHUA_NHO' && !memorized;\n    return dkXemTatCa || dkXemDaNho || dkXemChuaNho;\n  }\n}\n","<div *ngIf=\"isShowForm\">\n    <input placeholder=\"English\" [(ngModel)]=\"newEn\">\n    <br>\n    <input placeholder=\"Vietnamese\" [(ngModel)]=\"newVn\">\n    <br>\n    <button (click)=\"addWord();\">Thêm từ mới</button>\n</div>\n<button (click)=\"isShowForm = true\" *ngIf=\"!isShowForm\">Thêm từ mới</button>\n<br>\n<select [(ngModel)]=\"filterStatus\">\n    <option value=\"XEM_TAT_CA\">xem tất cả</option>\n    <option value=\"XEM_DA_NHO\">xem từ đã nhớ</option>\n    <option value=\"XEM_CHUA_NHO\">xem từ chưa nhớ</option>\n</select>\n<div *ngFor=\"let word of arrWords\">\n    <div class=\"word\" *ngIf=\"getShowStatus(word.memorized)\">\n        <h3 [ngStyle]=\"{ color: word.memorized ? 'red' : 'green' }\"> \n            <!-- Nếu word.memorized = true thì màu đỏ, ngược lại màu xanh -->\n            <!-- dấu {} vì là object -->\n            {{ word.en }}\n        </h3>\n        <p>{{ word.vn }}</p>\n        <button (click)=\"removeWord(word.id);\">xóa</button>\n        <button (click)=\"word.memorized = !word.memorized\">\n            {{ word.memorized ? 'Đã thuộc' : 'Chưa thuộc' }}\n        </button>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n// import { Routes, RouterModule } from '@angular/router';\n\n// const routesConfig = [\n//   { path: 'contacts', component: ContactsComponent },\n//   { path: 'detail', component: ContactDetailComponent },\n//   { path: '', redirectTo: '/contacts', pathMatch: 'full'},\n//   { path: '**', component: PageNotFoundComponent }\n//   // những path chạy từ trên dưới chưa phải vào path nào thì kí hiệu là '**'\n// ]\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WordComponent} from './word/word.component';\nimport { BookComponent } from './book/book.component';\nimport { UserFormComponent } from './user-form/user-form.component';\nimport { StructComponent } from './struct/struct.component';\nimport { WordsComponent } from './words/words.component';\nimport { PersonComponent } from './person/person.component';\nimport { ListPersonComponent } from './list-person/list-person.component';\nimport { ParentComponent } from './parent.component';\nimport { ChildComponent } from './child.component';\nimport { CardComponent } from './card.component';\nimport { LearnPipeComponent } from './learn-pipe/learn-pipe.component';\nimport { RoundPipe } from './round.pipe';\nimport { IpComponent } from './ip.component';\nimport { IpService } from './ip.service';\nimport { WeatherComponent } from './weather/weather.component';\nimport { SignInComponent } from './sign-in.component';\nimport { SignUpComponent } from './sign-up.component';\n// import { ContactsComponent } from './contacts/contacts.component';\n// import { ContactDetailComponent } from './contact-detail/contact-detail.component';\n// import { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WordComponent,\n    BookComponent,\n    UserFormComponent,\n    StructComponent,\n    WordsComponent,\n    PersonComponent,\n    ListPersonComponent,\n    ParentComponent,\n    ChildComponent,\n    CardComponent,\n    LearnPipeComponent,\n    RoundPipe,\n    IpComponent,\n    WeatherComponent,\n    SignInComponent,\n    SignUpComponent,\n    // ContactsComponent,\n    // ContactDetailComponent,\n    // PageNotFoundComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    // RouterModule.forRoot(routesConfig)\n  ],\n  providers: [IpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n \r\n@Injectable() \r\n\r\nexport class IpService {\r\n    constructor(private http: HttpClient) {}\r\n    getIp() {\r\n        return this.http.get('http://ip.jsontest.com/')\r\n        .toPromise()\r\n        .then((res:any) => res.ip)\r\n    }\r\n}","// import { Component,ViewChild } from '@angular/core';\r\n\r\n// @Component ({\r\n//     selector: 'app-parent',\r\n//     template:\r\n//      `\r\n//      <h3>{{ value }}</h3>\r\n//      <app-child (myClick) = \"changValue($event);\"></app-child>\r\n//      `\r\n     \r\n// })\r\n\r\n// export class ParentComponent {\r\n//     value = 0;\r\n\r\n//     changValue(isAdd: boolean) {\r\n//         if (isAdd) {\r\n//             this.value = this.value + 1;\r\n//         } else {\r\n//             this.value = this.value - 1;\r\n//         }\r\n//     }\r\n// }\r\n\r\nimport { Component,ViewChild } from '@angular/core';\r\nimport { ChildComponent } from './child.component';\r\n\r\n@Component ({\r\n    selector: 'app-parent',\r\n    template:\r\n     `\r\n        <button (click)=\"onAddForChild();\">Add for child</button>\r\n        <app-child></app-child>\r\n     `\r\n     \r\n})\r\n\r\nexport class ParentComponent {\r\n    @ViewChild(ChildComponent)\r\n    myChild: ChildComponent;\r\n\r\n    onAddForChild() {\r\n        this.myChild.value++;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.css'],\n})\nexport class ContactsComponent implements OnInit {\n  contacts = [\n    { id: 1, name: 'Teo', phoneNumber: '0123' },\n    { id: 2, name: 'Ti', phoneNumber: '0456' },\n    { id: 3, name: 'Tun', phoneNumber: '0789' },\n  ];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div *ngFor = \"let contact of contacts\">\n    <a routerLink=\"/detail/{{ contact.id }}/{{ contact.name }}/{{ contact.phoneNumber}}\">{{ contact.name }}</a>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-person',\n  templateUrl: './person.component.html',\n  styleUrls: ['./person.component.css']\n})\nexport class PersonComponent implements OnInit {\n  @Input() name : string;\n  @Input() age : Number;\n  @Output() removePerson = new EventEmitter<string>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  removePersonByClick(){\n    this.removePerson.emit(this.name);\n  }\n}\n","<h3>Tên: {{ name }}</h3>\n<p>Tuổi : {{ age }}</p>\n<button (click) = \"removePersonByClick();\">Xóa</button>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name : 'roundNum' }) //làm tròn số\r\n\r\nexport class RoundPipe implements PipeTransform {\r\n    transform(value: number,isUpper: boolean,addTo: number): number {\r\n    // chuyển thành kiểu số, value: number : input, number: output\r\n        if (isUpper){\r\n            return Math.ceil(value + addTo);\r\n        }  \r\n        return Math.floor(value + addTo);\r\n    }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-struct',\n  templateUrl: './struct.component.html',\n  styleUrls: ['./struct.component.css']\n})\nexport class StructComponent implements OnInit {\n\n  isshow = true;\n  arrSubjects = ['Angular' , 'React' , 'Node'];\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p *ngIf = \"isshow\">\n    struct works!\n</p>\n<button (click) = \"isshow = !isshow\">Toggle</button>\n<ul>\n    <li *ngFor = \"let subject of arrSubjects\">\n        <p>{{ 'Subject: ' + subject }}</p>\n    </li>\n</ul>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n//import { CommonModule } from '@angular/common': Module chứa ngFor, ngIf, ...\n\n// import { ContactsComponent } from './contacts/contacts.component';\nimport { ContactsModule } from './contacts/contacts.module';\nimport { ContactDetailComponent } from './contact-detail/contact-detail.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routesConfig = [\n  // { path: 'contacts', component: ContactsComponent },\n  { path: 'detail/:id/:name/:phoneNumber', component: ContactDetailComponent },\n  // truyền tham số id bên routerLink=\"/detail/{{ contact.id }} vào\n  { path: '', redirectTo: '/contacts', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n  // những path chạy từ trên dưới chưa phải vào path nào thì kí hiệu là '**'\n];\n\n// const routes: Routes = [];\n\n@NgModule({\n  imports: [\n    ContactsModule, // đặt lên trước routerModule, nếu đặt lên sau thì sẽ dễ bị match với path '**' thì sẽ không chạy được\n    RouterModule.forRoot(routesConfig), \n    CommonModule\n  ],\n  declarations: [\n    // ContactsComponent,\n    ContactDetailComponent,\n    PageNotFoundComponent,\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component,OnInit } from '@angular/core';\r\nimport { IpService } from './ip.service';\r\n\r\n@Component({\r\n  selector: 'app-ip',\r\n  template: '<h3>{{ ip }}</h3>'\r\n  \r\n})\r\nexport class IpComponent implements OnInit {\r\n  ip: String;\r\n  constructor(private ipService: IpService ) {}\r\n  ngOnInit(): void {\r\n    this.ipService.getIp()\r\n      .then(ip => this.ip = ip) \r\n      // có được ip, gắn this.ip bằng ip nhận được\r\n      .catch(err => console.log(err));\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}